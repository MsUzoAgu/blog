<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://msuzoagu.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://msuzoagu.github.io/blog/" rel="alternate" type="text/html" /><updated>2020-07-15T20:44:55-05:00</updated><id>https://msuzoagu.github.io/blog/feed.xml</id><title type="html">mua</title><subtitle>notes at the intersection of technology, art, and humanities</subtitle><entry><title type="html">iOS Onboarding: Part One</title><link href="https://msuzoagu.github.io/blog/ios/2020/07/14/user-defaults-onboarding.html" rel="alternate" type="text/html" title="iOS Onboarding: Part One" /><published>2020-07-14T00:00:00-05:00</published><updated>2020-07-14T00:00:00-05:00</updated><id>https://msuzoagu.github.io/blog/ios/2020/07/14/user-defaults-onboarding</id><content type="html" xml:base="https://msuzoagu.github.io/blog/ios/2020/07/14/user-defaults-onboarding.html">&lt;h1 id=&quot;firsttimeuser-or-nah&quot;&gt;FirstTimeUser or Nah?&lt;/h1&gt;

&lt;h2 id=&quot;user-defaults&quot;&gt;User Defaults&lt;/h2&gt;
&lt;p&gt;We can determine if a user is a first time user by setting boolean flags via &lt;strong&gt;UserDefaults&lt;/strong&gt;, which Apple defines &lt;a href=&quot;https://developer.apple.com/documentation/foundation/userdefaults&quot;&gt;UserDefaults&lt;/a&gt; as:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;An interface to the user’s defaults database, where you store key-value pairs persistently across launches of your app.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I find &lt;strong&gt;UserDefaults&lt;/strong&gt; very useful for determine things like:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;is a customer a first time user?&lt;/li&gt;
  &lt;li&gt;is a customer a beta tester?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;We all have to deal with onboarding at some point so below are general steps to get one started.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;create a boolean flag in the coordinator responsible for handling the OnBoarding flow:
    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AppCoordinator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Coordinator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
   &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;isFirstTimeUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserDefaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;standard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;isFirstTimeUser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFirstTimeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;nf&quot;&gt;presentOnboarding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;nf&quot;&gt;presentDefaultFlow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Substitue coordinator for AppDelegate/SceneDelegate if you don’t follow the coordinator pattern:&lt;/p&gt;

    &lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SceneDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIResponder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIWindowSceneDelegate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
   &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;functionThatDeterminesWhatVCToPresent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;isFirstTimeUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserDefaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;standard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;isFirstTimeUser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFirstTimeUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nf&quot;&gt;presentOnboarding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nf&quot;&gt;presentDefaultFlow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;you need a mechanism to indicate that the onboarding flow is complete. Typically this is accomplished via a button click. Thus in the viewcontroller responsible for handing onboarding user interactions, create an action that toggles the &lt;code class=&quot;highlighter-rouge&quot;&gt;isFirstTimeUser&lt;/code&gt; boolean flag to false.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you use a storyboard, the code for that would look something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```swift
class OnboardingViewControllerOrPageController {

  //MARK: - Properties
  @IBOutlet weak var onboardingCompletedButton: UIButton!
  ...
  //MARK:- Actions
  @IBOutlet func onboardingCompletedButtonTapped(_ sender: UIButton) {
    let isFirstTimeUser = false
    let defaults = UserDefaults.standard
    defaults.set(isFirstTimeUser, forKey: &quot;isFirstTimeUser&quot;)
    //add code for what happens after boolean is switched
  }
}
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you use programatic constraints, the code looks something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```swift 
class OnboardingViewControllerOrPageController {

    private func whenOnBoardingCompletedButtonIsTapped() {
        onboardingView.onboardingCompletedButton.addTarget(self, action: #selector(ActionButtonProtocol.buttonTapped(_:)), for: .touchUpInside)
    }   
    
    private buttonTapped(_ sender: UIButton) {
        let isfirstTimeUser = false
        let defaults = UserDefaults.standard
        defaults.set(isfirstTimeUser, forKey: &quot;isfirstTimeUser&quot;)
        coordinator?.onboardingCompleted()
    }
}
```
  
Note that the coordinator handles wnat to present next after onboarding is completed (via a call to `coordinator?.onboardingCompleted()` function). This is because we typicaly want to present a new ViewController (thus returning to applications default flow) at this point -  presenting any ViewController is the responsibility of a coordinator because coordinators deal with navigation flow. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The logic followed/implemented is simple.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Is this a first time user?&lt;/li&gt;
  &lt;li&gt;Yes =&amp;gt; present the onboarding flow&lt;/li&gt;
  &lt;li&gt;No =&amp;gt; present the application’s usual flow&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;resetting-userdefaults&quot;&gt;Resetting UserDefaults&lt;/h3&gt;
&lt;p&gt;Discovered that &lt;strong&gt;UserDefaults&lt;/strong&gt; does not have a &lt;code class=&quot;highlighter-rouge&quot;&gt;reset&lt;/code&gt; function while testing. 2 options that work are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;use &lt;code class=&quot;highlighter-rouge&quot;&gt;removeObject&lt;/code&gt; function to remove the key of a set value thus setting resetting the entire key-value to nil. For example: &lt;code class=&quot;highlighter-rouge&quot;&gt;UserDefaults.standard.removeObject(forKey: &quot;isFirstTimeUser&quot;)&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;writing an extension. &lt;a href=&quot;https://twitter.com/_bartjacobs&quot;&gt;Bart Jacobs&lt;/a&gt; has a really good post on this &lt;a href=&quot;https://cocoacasts.com/ud-8-how-to-clear-or-reset-user-defaults-in-swift&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">FirstTimeUser or Nah?</summary></entry><entry><title type="html">why blog?</title><link href="https://msuzoagu.github.io/blog/markdown/2020/07/11/why-blog.html" rel="alternate" type="text/html" title="why blog?" /><published>2020-07-11T00:00:00-05:00</published><updated>2020-07-11T00:00:00-05:00</updated><id>https://msuzoagu.github.io/blog/markdown/2020/07/11/why-blog</id><content type="html" xml:base="https://msuzoagu.github.io/blog/markdown/2020/07/11/why-blog.html">&lt;h1 id=&quot;intentions-vs-goals&quot;&gt;Intentions vs Goals&lt;/h1&gt;

&lt;h2 id=&quot;the-road-to-failure-is-made-easier-by-good-intentions&quot;&gt;The road to failure is made easier by good intentions&lt;/h2&gt;

&lt;p&gt;I intend to write but experience has proven that intent is not a good motivator; I need to know why and how an action maps to a goal.&lt;/p&gt;

&lt;p&gt;My current goals are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;stop googling around for solutions to the same problems&lt;/li&gt;
  &lt;li&gt;a single repository for documenting problems/solutions&lt;/li&gt;
  &lt;li&gt;a single repository for sharing and discussing ideas&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Writing address all 3.&lt;/p&gt;</content><author><name></name></author><summary type="html">Intentions vs Goals</summary></entry></feed>